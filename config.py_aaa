# coding:utf-8
import datetime
import os

# モーター出力パラメータ （デューティー比：-100~100で設定）
# スロットル用
FORWARD_S = 40 #ストレートでの値, joy_accel1
FORWARD_C = 30 #カーブでのの値, joy_accel2
STOP = 0
REVERSE = -100 
# ステアリング用
LEFT = -100 #<=100
NUTRAL = 0 
RIGHT = 100 #<=100

# 超音波センサの検知パラメータ 
## 距離関連、単位はmm
### 前壁の停止/検知距離
DETECTION_DISTANCE_STOP = 250
DETECTION_DISTANCE_BACK = 150
DETECTION_DISTANCE_Fr = 150
### 右左折判定基準距離
DETECTION_DISTANCE_RL = 550
### 右/左手法目標距離
DETECTION_DISTANCE_TARGET = 200 #目標距離
DETECTION_DISTANCE_RANGE = 50/2 #修正認知半径距離

## PIDパラメータ(PDまでを推奨)
K_P = 0.7 #0.7
K_I = 0.0 #0.0
K_D = 0.3 #0.3

# 判断モード選択
model_plan_list = ["GoStraight",
                   "Right_Left_3","Right_Left_3_Records",
                   "RightHand","RightHand_PID","LeftHand","LeftHand_PID",
                   "NN", "CNN"]
mode_plan = "NN" # ここはユーザ指定に合わせてNNのまま

# モード選択
# "GoStraight":直進 "Right_Left_3"："Right左/Left右/直進" "NN":ニューラル
mode = "user"

# have_ultrasonic True だと停止動作を優先
have_ultrasonic = True

# ultrasonics
# 前方（左,中央,右）のTRIG/ECHO GPIO番号
# HC-SR04の仕様に合わせること
ULTRA_TRIG_L = 17 
ULTRA_ECHO_L = 27

ULTRA_TRIG_C = 22 
ULTRA_ECHO_C = 23

ULTRA_TRIG_R = 24 
ULTRA_ECHO_R = 25

# 超音波の閾値(cm)
ULTRASONIC_THRESHOLD = 30

# 制御の刻み
FRAME_RATE = 20

# カメラ設定
HAVE_CAMERA = True
CAMERA_INDEX = 0
IMAGE_W = 160
IMAGE_H = 120
IMAGE_DEPTH = 3

# 学習モデル
MODEL_PATH = "model/mypilot.pth"

# PWM設定（サーボ/モータ）
PWM_FREQ = 50
STEERING_LEFT_PWM = 400
STEERING_RIGHT_PWM = 250
STEERING_CENTER_PWM = 325
MOTOR_FORWARD_PWM = 400
MOTOR_BACK_PWM = 250
MOTOR_STOP_PWM = 325

# 記録関連
RECORD_DATA = True
RECORD_IMAGE = True
SAVE_IMAGE_EVERY_N = 3

# CSV保存
records = "records"
if not os.path.exists(records):
    os.makedirs(records)
    print("make dir as ",records)
record_filename = './'+records+'/record_' + datetime.datetime.now().strftime('%Y%m%d_%H%M%S') + '.csv'

# 画像保存
if HAVE_CAMERA ==True:
    img_size = (IMAGE_W, IMAGE_H, IMAGE_DEPTH)
    images = "images"
    if not os.path.exists(images):
        # ディレクトリが存在しない場合、ディレクトリを作成する
        os.makedirs(images)
        print("make dir as ",images)
    ## 記録するフォルダ名
    image_dir = './'+images+'/image_' + datetime.datetime.now().strftime('%Y%m%d_%H%M%S')
    os.makedirs(image_dir)
    print("make dir as ",image_dir)

# --- （中略：もとのファイルに含まれていた各種UI/キー設定、学習設定、調整用コメントなど） ---
# 以降は元のconfig.pyの内容を維持しています

# ***** たとえばコントローラ設定（重要な変更点はここ） *****
HAVE_CONTROLLER = True
JOYSTICK_STEERING_SCALE = 1.0   # ← 反転を解除（左で負、右で正）
JOYSTICK_THROTTLE_SCALE = -1.0  # 前後は従来どおり

# （注意）このファイル内には「LEFT=0」「RIGHT=4」などの“ボタン番号”用の定数もあります。
# それらはジョイスティックのボタン割り当て用であり、今回の“ステアリング角の左右”とは無関係なので変更しません。
